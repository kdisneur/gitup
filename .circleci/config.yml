version: 2.1

executors:
  golang:
    docker:
      - image: circleci/golang:1.11.5

commands:
  build_binary:
    parameters:
      arch:
        type: string
      os:
        type: string
    steps:
      - checkout
      - restore_cache:
          keys:
            - v6-dependency-cache
      - run:
          command: 'make compile GOCOMPILE_OPTIONS="-mod=vendor" BUILD_NUMBER=${CIRCLE_WORKFLOW_ID} OS=<< parameters.os >> ARCH=<< parameters.arch >>'
      - persist_to_workspace:
          root: build
          paths:
            - gitup-<< parameters.os >>-<< parameters.arch >>.tgz
            - gitup-<< parameters.os >>-<< parameters.arch >>

jobs:
  lint:
    executor: golang
    steps:
      - checkout
      - restore_cache:
          keys:
            - v6-dependency-cache
      - run:
          command: make test-style GOLINT=~/tools/golint

  setup:
    executor: golang
    steps:
      - checkout
      - restore_cache:
          keys:
            - v6-dependency-cache
      - run:
          command: go mod vendor
      - run:
          command: |
            if [[ ! -f ~/tools/ghr ]]; then
              mkdir -p ~/tools
              go get github.com/tcnksm/ghr
              mv /go/bin/ghr ~/tools
            fi
      - run:
          command: |
            if [[ ! -f ~/tools/golint ]]; then
              mkdir -p ~/tools
              go get golang.org/x/lint/golint
              mv /go/bin/golint ~/tools
            fi
      - save_cache:
          key: v6-dependency-cache
          paths:
            - vendor
            - ~/tools

  build_darwin_386:
    executor: golang
    steps:
      - build_binary:
          os: "darwin"
          arch: "386"

  build_linux_amd64:
    executor: golang
    steps:
      - build_binary:
          os: "linux"
          arch: "amd64"

  build_linux_386:
    executor: golang
    steps:
      - build_binary:
          os: "linux"
          arch: "386"

  unit_test:
    executor: golang
    steps:
      - checkout
      - restore_cache:
          keys:
            - v6-dependency-cache
      - run:
          command: make test-unit GOTEST_OPTIONS="-v -mod=vendor"

  publish:
    executor: golang
    steps:
      - restore_cache:
          keys:
            - v6-dependency-cache
      - attach_workspace:
          at: ./artifacts
      - run:
          command: |
            SHA=$(./artifacts/gitup-linux-386 version | sed -E 's/.*GitCommit:"([^"]+)".*/\1/')
            VERSION=$(./artifacts/gitup-linux-386 version | sed -E 's/.*Version:"([^"]+)".*/\1/')
            IS_PRERELEASE=$(if echo ${VERSION} | grep -qE 'v[0-9]+\.[0-9]+\.[0-9]+$'; then echo ""; else echo "-prerelease"; fi)
            mkdir ghr-artifacts
            cp ./artifacts/*.tgz ghr-artifacts
            ~/tools/ghr -t ${GITHUB_TOKEN} \
                -u ${CIRCLE_PROJECT_USERNAME} \
                -r ${CIRCLE_PROJECT_REPONAME} \
                -c ${CIRCLE_SHA1} \
                -n "${VERSION}" \
                ${IS_PRERELEASE} \
                ${VERSION} ./ghr-artifacts
workflows:
  version: 2.1

  gitup:
    jobs:
      - setup
      - build_darwin_386:
          requires:
            - unit_test
            - lint
      - build_linux_amd64:
          requires:
            - unit_test
            - lint
      - build_linux_386:
          requires:
            - unit_test
            - lint
      - unit_test:
          requires:
            - setup
      - lint:
          requires:
            - setup
      - publish:
          requires:
            - build_darwin_386
            - build_linux_amd64
            - build_linux_386
